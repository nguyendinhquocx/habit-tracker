/**
 * Script ƒë·ªÉ ch·∫°y trong Google Apps Script Console
 * Copy v√† paste code n√†y v√†o Apps Script Editor v√† ch·∫°y h√†m runWebhookUpdate()
 */

/**
 * Ch·∫°y c·∫≠p nh·∫≠t webhook v√† test
 */
function runWebhookUpdate() {
  Logger.log('=== UPDATING WEBHOOK IN APPS SCRIPT ===');
  
  try {
    // C·∫≠p nh·∫≠t webhook URL m·ªõi trong PropertiesService
    const newWebhookUrl = 'https://hooks.slack.com/services/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';
    
    Logger.log('üîÑ Updating PropertiesService with new webhook...');
    PropertiesService.getUserProperties().setProperty('SLACK_WEBHOOK_URL', newWebhookUrl);
    
    // Verify update
    const updatedUrl = PropertiesService.getUserProperties().getProperty('SLACK_WEBHOOK_URL');
    Logger.log(`‚úÖ Updated webhook URL: ${updatedUrl}`);
    
    // Test the new webhook
    Logger.log('\nüß™ Testing new webhook...');
    const testPayload = {
      'text': 'üß™ Test message from Habit Tracker - New webhook is working!',
      'channel': '#habit',
      'username': 'Habit Tracker Bot'
    };
    
    const options = {
      'method': 'POST',
      'headers': {
        'Content-Type': 'application/json'
      },
      'payload': JSON.stringify(testPayload)
    };
    
    const response = UrlFetchApp.fetch(newWebhookUrl, options);
    
    if (response.getResponseCode() === 200) {
      Logger.log('üéâ SUCCESS! New webhook is working correctly!');
      Logger.log('‚úÖ Slack integration is now fixed and ready to use.');
      return true;
    } else {
      Logger.log(`‚ùå Test failed with response code: ${response.getResponseCode()}`);
      Logger.log(`Response: ${response.getContentText()}`);
      return false;
    }
    
  } catch (error) {
    Logger.log(`‚ùå Error during webhook update: ${error.message}`);
    return false;
  }
}

/**
 * Ki·ªÉm tra c·∫•u h√¨nh hi·ªán t·∫°i
 */
function checkCurrentConfig() {
  Logger.log('=== CURRENT CONFIGURATION ===');
  
  const properties = PropertiesService.getUserProperties().getProperties();
  
  Logger.log('Slack Configuration:');
  Logger.log(`  SLACK_WEBHOOK_URL: ${properties.SLACK_WEBHOOK_URL || 'Not set'}`);
  Logger.log(`  ENABLE_SLACK: ${properties.ENABLE_SLACK || 'Not set'}`);
  Logger.log(`  SLACK_CHANNEL: ${properties.SLACK_CHANNEL || 'Not set'}`);
  
  // Check if it's the new webhook
  if (properties.SLACK_WEBHOOK_URL && properties.SLACK_WEBHOOK_URL.includes('B096GH78DCN')) {
    Logger.log('‚úÖ New webhook URL detected in PropertiesService');
  } else {
    Logger.log('‚ö†Ô∏è Old webhook URL still in PropertiesService');
  }
}

/**
 * H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
 */
function showInstructions() {
  Logger.log('=== H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG ===');
  Logger.log('1. Ch·∫°y checkCurrentConfig() ƒë·ªÉ xem c·∫•u h√¨nh hi·ªán t·∫°i');
  Logger.log('2. Ch·∫°y runWebhookUpdate() ƒë·ªÉ c·∫≠p nh·∫≠t webhook m·ªõi');
  Logger.log('3. Sau khi th√†nh c√¥ng, ch·∫°y l·∫°i habit tracker ƒë·ªÉ test');
  Logger.log('');
  Logger.log('Webhook m·ªõi: https://hooks.slack.com/services/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');
}